<?php
/**
 * Created by PhpStorm.
 * User: PC
 * Date: 2017/7/11
 * Time: 11:00
 */

namespace frontend\controllers;

use common\models\ActivityLotteryPrize;
use common\models\ActivityLottery;
use common\models\ActivityLotteryRecord;
use common\models\ActivityLotteryWinRecord;
use yii;

class ActivityLotteryController extends PublicBaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * 大转盘活动详情
     */
    public function actionActivityInfo(){
        $activity_id = yii::$app->request->post('activity_id', 0);
        $token       = yii::$app->request->post('token', 0);
        if(!$activity_id) $this->_errorData('1000', '参数错误');

        $activity_info = ActivityLottery::find()
            ->alias('al')
            ->select(['al.*', 'alb.*'])
            ->leftJoin('vrshop.activity_lottery_base alb', 'al.base_id = alb.base_id')
            ->where(['al.activity_id'=>$activity_id])
            ->asArray()
            ->one();
        if(!$activity_info || !is_array($activity_info)) $this->_errorData('1000', '活动信息错误');

        /* 奖品列表 */
        $activity_info['price_list'] = ActivityLotteryPrize::find()
            ->alias('alp')
            ->select(['alp.*', 'g.goods_name'])
            ->leftJoin('vrshop.goods g', 'alp.goods_id = g.goods_id')
            ->where(['activity_id'=>$activity_id])
            ->orderBy('alp.percentage ASC')
            ->asArray()
            ->all();

        /* 用户抽奖次数 */
        $activity_info['play_count'] = $activity_info['limit_num'];

        if($token){
            $user_info  = $this->getUserInfoByToken($token);
            if (isset($user_info['user_id'])) {
                $today_start_time = strtotime(date('Y-m-d', time()));
                $today_end_time   = $today_start_time + 24 * 3600 - 1;

                /* 抽奖赢的次数 */
                $reward_count = 0;
                $reward_count = ActivityLotteryWinRecord::find()->where(['activity_id'=>$activity_id, 'user_id'=>$user_info['user_id'], 'is_use'=>0])->count();

                /* 免费次数 每天/永久 */
                if($activity_info['free_num_type'] == 0){
                    $free_used_count   = ActivityLotteryRecord::find()->where(['activity_id'=>$activity_id, 'user_id'=>$user_info['user_id'], 'play_type'=>0])->andWhere(['>', 'create_time', $today_start_time])->andWhere(['<', 'create_time', $today_end_time])->count();
                }else if($activity_info['free_num_type'] == 1){
                    $free_used_count   = ActivityLotteryRecord::find()->where(['activity_id'=>$activity_id, 'user_id'=>$user_info['user_id'], 'play_type'=>0])->count();
                }else{
                    $free_used_count = 0;
                }
                $free_count = intval($activity_info['free_num'] - $free_used_count);

                /* 付费次数 每天/永久 */
                $pay_num = intval($activity_info['limit_num'] - $activity_info['free_num']);
                if ($activity_info['limit_num_type'] == 0) {
                    $pay_used_count = ActivityLotteryRecord::find()->where(['activity_id'=>$activity_id, 'user_id'=>$user_info['user_id'], 'play_type'=>1])->andWhere(['>', 'create_time', $today_start_time])->andWhere(['<', 'create_time', $today_end_time])->count();
                } elseif ($activity_info['limit_num_type'] == 1) {
                    $pay_used_count = ActivityLotteryRecord::find()->where(['activity_id'=>$activity_id, 'user_id'=>$user_info['user_id'], 'play_type'=>1])->count();
                } else {
                    $pay_used_count = 0;
                }
                $pay_count = intval($pay_num - $pay_used_count);

                $activity_info['play_count'] = intval($free_count + $pay_count + $reward_count);
            }
        }

        $this->_successData($activity_info);
    }

    /**
     * 未登录用户抽奖接口
     * 记录中奖session
     */
    public function actionNotLoginPrize(){

    }



}