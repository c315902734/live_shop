<?php
/**
 * Created by PhpStorm.
 * User: PC
 * Date: 2017/8/23
 * Time: 16:04
 */

namespace frontend\controllers;

use common\models\Goods;
use common\models\GoodsAttributeValues;
use yii;
class ShopPayController extends BaseApiController
{
    private $_wx_wap;
    private $_alipay_wap;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->_wx_wap = 'wx_wap';
        $this->_alipay_wap = 'alipay_wap';
    }

    public function actionPay(){
        $order_id      = yii::$app->request->post('order_id', 0);
        $goods_id      = yii::$app->request->post('goods_id', 0);
        $goods_attr_id = yii::$app->request->post('goods_attr_id', 0);
        $total_price   = yii::$app->request->post('total_price', 0);
        $pay_type_code = yii::$app->request->post('pay_type', 0);
        if(!$goods_id || !$pay_type_code || !$total_price){
            $this->_errorData('10000', '参数错误');
        }

        $goods_info = Goods::findOne($goods_id)->toArray();
        if(!$goods_info || $goods_info['is_shelves'] == 0 || $goods_info['is_recovery'] == 1){
            $this->_errorData('10002', '商品错误');
        }

        $db_total_price = 0;
        if($goods_attr_id){
            $goods_attr_info = GoodsAttributeValues::find()->where(['goods_id'=>$goods_id, 'values_id'=>$goods_attr_id])->asArray()->one();
            if($goods_attr_info){
                $this->_errorData('10003', '商品属性错误');
            }
            $db_total_price = $goods_attr_info['rmb_price'];
        }else{
            $db_total_price = $goods_info['rmb_price'];
        }

        $user_info = $this->_getUserModel(true);

        $channel = '';
        switch ($pay_type_code){
            case 1:
                $channel = $this->_wx_wap;
                $extra = [];
                break;
            case 2:
                $channel = $this->_alipay_wap;
                $extra = [];
                break;
            default:
                $channel = '';
        }
        if($channel == '') $this->_errorData('10001', '支付方式错误');

        Pingpp::setApiKey(Yii::$app->params['PING_API_KEY']);
        try {
            $ch = Charge::create(
                array(
                    "subject" => "[{$this->userTextDecode($user_info['nickname'])}] 购买商品ID [{$goods_info['goods_id']}] 商品属性 [{$goods_attr_info['values_id']}]",
                    "body" => "支付订单",
                    "amount" => intval($db_total_price * 100),
                    "order_no" => $order_id,
                    "currency" => "cny",
                    "extra" => $extra,//特定渠道发起交易时需要的额外参数以及部分渠道支付成功返回的额外参数。
                    "channel" => $channel,
                    "client_ip" => $_SERVER["REMOTE_ADDR"],
                    "app" => array("id" => Yii::$app->params['PING_ID']),
                    "time_expire" => time() + 2 * 3600
                )
            );

            if ($ch['id']) {
                $order_ping = new Order();
                $order_ping->user_id = $user_id;
                $order_ping->goods_id = $goods_id;
                $order_ping->order_number = $order_number;
                $order_ping->order_ch_id  = $ch['id'];
                $order_ping->total_price  = $gold_info['money'];
                $order_ping->pay_status   = '待支付';
                $order_ping->pay_type     = $channel;
                $order_ping->create_time  = time();
                $order_ping->edit_time    = time();
                $order_ping->save();
            }
            $this->_successData($ch);
        } catch (Base $e) {
            $error_body = json_decode($e->getHttpBody(), true);
            $message = $error_body['error']['message'];
            $type    = $error_body['error']['type'];
            $ping_plus_err_array = array_flip(PingPlus::$error_desc);

            $code = isset($ping_plus_err_array[$type]) ? $ping_plus_err_array[$type] : 16007;

            if ($code != 16007) {
                $this->_errorData(0001, $message);
            }

            $this->_errorData($code, $message);
        }
    }
}